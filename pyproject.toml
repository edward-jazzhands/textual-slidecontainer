[project]
name = "textual-slidecontainer"
version = "0.5.2"
description = "A Sliding Container widget for Textual"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    { name = "edward-jazzhands", email = "ed.jazzhands@gmail.com" }
]
license = { text = "MIT" }
keywords = ["python", "textual", "tui", "slidecontainer", "widget"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
]
dependencies = [
    "textual>=5.0.0",
]

[project.urls]
Repository = "https://github.com/edward-jazzhands/textual-slidecontainer"
Changelog = "https://github.com/edward-jazzhands/textual-slidecontainer/blob/master/Changelog.md"

[project.scripts]
textual-slidecontainer = "textual_slidecontainer.demo:run_demo"

# change this to uv build?
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

##########################
# Dev Dependency Configs #
##########################

[dependency-groups]
dev = [
    "basedpyright>=1.31.0",
    "black>=24.8.0",
    "mypy>=1.14.1",
    "python-semantic-release>=10.2.0",
    "ruff>=0.11.8",
    "textual-dev>=1.7.0",
]

[tool.black]
line-length = 110

[tool.mypy]
python_version = "3.10"
pretty = true
strict = true

[tool.basedpyright]
include = ["src"]
typeCheckingMode = "strict"

##################################
# Semantic Release Configuration #
##################################

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
build_command = "python -m build --sdist --wheel ."
repo_dir = "/home/devuser/workspace/vscode-projects/textual-slidecontainer" #!?
#-----------------------------------------------------
# These two settings will need to be changed when the project is ready
# to leave the alpha stage and move up to 1.0.0:
allow_zero_version = true
major_on_zero = false
#-----------------------------------------------------
# assets = []
# build_command_env = []
# commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
# commit_parser = "conventional"
# logging_use_named_masks = false
# no_git_verify = false
# tag_format = "v{version}"
#-----------------------------------------------------

# [tool.semantic_release.branches.main]
# match = "(main|master)"
# prerelease_token = "rc"
# prerelease = false
#-----------------------------------------------------

[tool.semantic_release.changelog]
changelog_file = "" #!?
# exclude_commit_patterns = []
# mode = "update"
# insertion_flag = "<!-- version list -->"
template_dir = "templates" #!?
#-----------------------------------------------------

# Recommended patterns for conventional commits parser that is scope aware:
exclude_commit_patterns = [
    '''chore(?:\([^)]*?\))?: .+''',
    '''ci(?:\([^)]*?\))?: .+''',
    '''refactor(?:\([^)]*?\))?: .+''',
    '''style(?:\([^)]*?\))?: .+''',
    '''test(?:\([^)]*?\))?: .+''',
    '''build\((?!deps\): .+)''',
    '''Initial [Cc]ommit.*''',
]
#-----------------------------------------------------

[tool.semantic_release.changelog.default_templates]
changelog_file = "Changelog.md"
# output_format = "md"
mask_initial_release = true #!?
#-----------------------------------------------------

# [tool.semantic_release.changelog.environment]
# block_start_string = "{%"
# block_end_string = "%}"
# variable_start_string = "{{"
# variable_end_string = "}}"
# comment_start_string = "{#"
# comment_end_string = "#}"
# trim_blocks = false
# lstrip_blocks = false
# newline_sequence = "\n"
# keep_trailing_newline = false
# extensions = []
# autoescape = false
#-----------------------------------------------------

# [tool.semantic_release.commit_author]
# env = "GIT_COMMIT_AUTHOR"
# default = "semantic-release <semantic-release>"
#-----------------------------------------------------

[tool.semantic_release.commit_parser_options]
# minor_tags = ["feat"]
# patch_tags = ["fix", "perf"]
# other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
# allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
# default_bump_level = 0
# parse_squash_commits = true
ignore_merge_commits = true #!?
#-----------------------------------------------------

[tool.semantic_release.remote]
# name = "origin"
# type = "github"
ignore_token_for_push = false #!?
# insecure = false
#-----------------------------------------------------

[tool.semantic_release.publish]
# dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true #!?
#-----------------------------------------------------
